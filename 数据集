import pandas as pd
import numpy as np
import random
from faker import Faker

fake = Faker()

# 创建空数据集
data = []

# 睡眠问题选项
sleep_issues_options = [
    "难以入睡", "夜间频繁醒来", "早醒无法再入睡", 
    "白天嗜睡", "睡眠不深", "打鼾", "无"
]

# 改善建议选项
improvement_suggestions = [
    "减少咖啡因摄入", "建立规律作息", "增加日间运动",
    "改善睡眠环境", "练习放松技巧", "限制睡前屏幕时间",
    "考虑专业咨询", "调整卧室温度", "使用白噪音",
    "无明显需要改善"
]

# 生成500条数据
for i in range(1, 501):
    age = random.randint(18, 80)
    gender = random.choice(["男", "女"])
    sleep_duration = round(random.uniform(3.0, 10.0), 1)
    time_to_sleep = round(random.uniform(0.1, 3.0), 1)
    wake_up_times = random.randint(0, 5)
    
    # 相关因素
    stress_level = random.randint(1, 10)
    caffeine = random.randint(0, 600)
    exercise = random.randint(0, 7)
    screen_time = random.randint(0, 180)
    room_temp = round(random.uniform(15.0, 25.0), 1)
    noise_level = random.randint(1, 10)
    
    # 睡眠质量评分(基于各因素计算)
    base_score = random.uniform(3.0, 9.0)
    quality_score = round(base_score - 
                         (time_to_sleep/3.0) - 
                         (wake_up_times/5.0) - 
                         (stress_level/20.0) - 
                         (min(caffeine, 400)/1000.0) + 
                         (exercise/14.0) - 
                         (min(screen_time, 120)/240.0) + 
                         ((22-room_temp)/14.0 if room_temp > 22 else (room_temp-16)/14.0) - 
                         (noise_level/20.0), 1)
    quality_score = max(1.0, min(10.0, quality_score))  # 限制在1-10范围内
    
    # 睡眠问题(基于质量分数和其他因素)
    issues = []
    if quality_score < 5:
        num_issues = random.randint(1, 3)
        issues = random.sample(sleep_issues_options[:-1], num_issues)
    elif quality_score < 7:
        if random.random() > 0.7:
            issues = random.sample(sleep_issues_options[:-1], 1)
    else:
        issues = ["无"]
    
    # 改善建议(基于问题)
    suggestions = []
    if "难以入睡" in issues:
        suggestions.extend(["建立规律作息", "练习放松技巧", "限制睡前屏幕时间"])
    if "夜间频繁醒来" in issues:
        suggestions.extend(["减少咖啡因摄入", "改善睡眠环境"])
    if "白天嗜睡" in issues:
        suggestions.extend(["增加日间运动", "建立规律作息"])
    if quality_score >= 7:
        suggestions = ["无明显需要改善"]
    elif not suggestions:
        suggestions = random.sample(improvement_suggestions[:-1], 2)
    
    # 确保建议唯一性
    suggestions = list(set(suggestions))
    
    data.append([
        i, age, gender, sleep_duration, time_to_sleep, wake_up_times,
        quality_score, stress_level, caffeine, exercise, screen_time,
        room_temp, noise_level, ", ".join(issues), ", ".join(suggestions)
    ])

# 创建DataFrame
columns = [
    "用户ID", "年龄", "性别", "睡眠时长(小时)", "入睡时间(小时)", "夜间醒来次数",
    "睡眠质量评分", "压力水平", "咖啡因摄入量(毫克/天)", "运动频率(次/周)", 
    "睡前屏幕时间(分钟)", "卧室温度(℃)", "卧室噪音水平", "主要睡眠问题", "改善建议"
]

df = pd.DataFrame(data, columns=columns)

# 保存为CSV文件
df.to_csv("睡眠质量数据集.csv", index=False, encoding="utf-8-sig")
